branches:
  only:
  - master

language: objective-c
os: osx
osx_image: xcode8
env:
  - scheme='Siesta macOS' platform='OS X'
  - scheme='Siesta iOS' platform='iOS Simulator,OS=10.0,name=iPhone SE'
  - scheme='Siesta iOS' platform='iOS Simulator,OS=9.3,name=iPhone 6'
  - scheme='Siesta iOS' platform='iOS Simulator,OS=9.0,name=iPhone 4s'

script: |
  # ------ Certificates ------

  # Thanks to https://github.com/Carthage/Carthage/blob/12fb7881876b4987584e49d00befcd2a8b6b354d/script/cibuild#L29-L51
  # but no thanks to Carthage for refusing to do simulator-only builds that would make all these keychain shenanigans unnecessary.

  KEYCHAIN=ios-build.keychain
  local password=cibuild

  # Create a temporary keychain for code signing.

  security create-keychain -p "$password" "$KEYCHAIN"
  security default-keychain -s "$KEYCHAIN"
  security unlock-keychain -p "$password" "$KEYCHAIN"
  security set-keychain-settings -t 3600 -l "$KEYCHAIN"

  # Download the certificate for the Apple cert authority
  local certpath="/tmp/apple_wwdr.cer"
  curl 'https://developer.apple.com/certificationauthority/AppleWWDRCA.cer' > "$certpath"
  security import "$certpath" -k "$KEYCHAIN" -T /usr/bin/codesign

  # Import our development certificate.
  security import ".ios-dev-cert.p12" -k "$KEYCHAIN" -P "$KEY_PASSWORD" -T /usr/bin/codesign
  echo "Available identities after import:"
  security find-identity

  # ------ Tools ------

  set -x

  git clone https://github.com/supermarin/xcpretty.git /tmp/xcpretty

  #brew update
  #brew install carthage

  # ------ Dependencies ------

  # Optional pre-download, because builds are so slow on Travis, and Carthage builds _everything_:
  echo "Downloading prebuilt dependencies"
  curl https://innig.net/tmp/siesta-deps-swift3.tar.bz2 | bzcat | tar xv

  # Uncomment to build with Carthage instead:
  #echo "Building dependencies"
  #carthage bootstrap --platform iOS,osx #--verbose

  # ------ Project build (at last!) ------

  echo
  echo —————— Running tests for $platform ...
  echo

  Siesta_DelayAfterEachSpec=1 \
  Siesta_TestMultipleNetworkProviders=1 \
  xcodebuild test \
      -project Siesta.xcodeproj \
      -scheme "$scheme" \
      -destination "platform=$platform" \
    | /tmp/xcpretty/bin/xcpretty -c
  
  buildresult=${PIPESTATUS[0]}

  echo —————— Completed tests for $platform.

  sleep 5  # Workaround for Travis log truncation

  exit $buildresult
